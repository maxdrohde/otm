---
title: "Overview"
author: "Max Rohde"
---

```{r}
library(otm)
library(tidyverse)
library(rms)

# Set global ggplot theme
theme_set(cowplot::theme_cowplot(font_size=12,
                                 font_family = "Source Sans Pro"))
```

```{r}
cutpoints = c(2.704779695, 3.283274970, 3.759044255, 6.152768017, 9.928567811, 12.594702347, 19.080282386)
beta_yprev = c(0.006164718, 3.668244235, 4.756980385, 7.696745715, 11.098149358, 15.471452261)
beta_t = -0.02
beta_tx = 0
beta_t_tx = -0.02

cutpoints = c(-2, 1, 2, 3, 4, 5, 6)
beta_yprev = seq(0.5, 6.5, 1)
beta_t = -0.02
beta_tx = 0
beta_t_tx = -0.04
```

## Generate data

```{r}
df <- generate_dataset(cutpoints = cutpoints,
                       beta_yprev = beta_yprev,
                       beta_t = beta_t,
                       beta_tx = beta_tx,
                       beta_t_tx = beta_t_tx,
                       tx_end = 28,
                       baseline_y = 4,
                       times = 1:28,
                       tx_type = "linear",
                       absorb = 8,
                       n_subjects = 50000) 
```

```{r}
df |>
  mutate(y = as.factor(y)) |>
  group_by(t, y, tx) |>
  count() |>
  group_by(t, tx) |>
  mutate(n = n / sum(n)) |>
  ggplot() +
  aes(x = t, y = n, color=y, linetype=tx) +
  geom_line() +
  geom_point(alpha=0.6, size=0.5) +
  scale_x_continuous(breaks = unique(df$t)) +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(breaks = seq(0, 1, by=0.1)) +
  coord_cartesian(ylim = c(0,1)) +
  facet_wrap(~tx) +
  labs(x = "Study day",
       y = "Empirical State Occupancy Probability",
       color = "State",
       linetype = "Treatment") +
  cowplot::theme_minimal_hgrid(font_size = 12,
                               font_family = "Source Sans Pro")
```


```{r}
get_p <- function(df){
  mod <- VGAM::vglm(formula = y ~ yprev + rcs(t, 6) * tx, 
                  family = VGAM::cumulative(parallel = TRUE),
                  data = df)

mod@coefficients |> round(4)

mod_reduced <- VGAM::vglm(formula = y ~ yprev + rcs(t, 6), 
                  family = VGAM::cumulative(parallel = TRUE),
                  data = df)

p <- VGAM::lrtest(mod, mod_reduced)@Body[2,5]

return(p)
}
```

## Test data

```{r}
cutpoints = c(0, 2, 4,5,6,7,8)
beta_yprev = c(0, 2, 4,5,6,7,8)
beta_t = -0.02
beta_tx = -0.2
beta_t_tx = -0.02
```

```{r}
df <- otm::generate_dataset(cutpoints = cutpoints,
                       beta_yprev = beta_yprev,
                       beta_t = beta_t,
                       beta_tx = beta_tx,
                       beta_t_tx = beta_t_tx,
                       tx_end = 14,
                       baseline_y = 4,
                       times = 1:14,
                       tx_type = "linear",
                       absorb = 8,
                       n_subjects = 2000)
```

```{r}
otm:::plot_empirical_sops(df) + facet_wrap(~tx)
```

```{r}
df <-
  otm:::generate_ordinal_random_effects_data(
                                       N = 10000,
                                       M = c(28),
                                       cutpoints = c(-4, -3, -2, -1, 0, 2, 5),
                                       beta_tx = -1,
                                       beta_t = -0.3,
                                       beta_interaction = 2,
                                       rand_intercept_sd = 1,
                                       rand_slope_sd = 0.05,
                                       rand_eff_corr = 0)

fig <-
df |>
  mutate(tx = as.factor(tx)) |>
  mutate(y = as.factor(y)) |>
  group_by(t, y, tx) |>
  count() |>
  group_by(t, tx) |>
  mutate(n = n / sum(n)) |>
  ggplot() +
  aes(x = t, y = n, color=y, linetype=tx) +
  geom_line() +
  geom_point(alpha=0.6, size=0.5) +
  scale_x_continuous(breaks = unique(df$t)) +
  scale_color_brewer(palette = "Dark2") +
  scale_y_continuous(breaks = seq(0, 1, by=0.1)) +
  coord_cartesian(ylim = c(0,1)) +
  labs(x = "Study day",
       y = "Empirical State Occupancy Probability",
       color = "State",
       linetype = "Treatment") +
  cowplot::theme_minimal_hgrid(font_size = 12,
                               font_family = "Source Sans Pro")
```

